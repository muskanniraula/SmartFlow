
@inject NavigationManager Navigation

<MudCard Class="pa-4" Outlined="true">
    <MudCardContent>
        <MudText Typo="Typo.h5" Align="Align.Center">Register</MudText>
        <MudForm OnValidSubmit="RegisterUser">
            <MudTextField @bind-Value="Username" Label="Username" Required="true" RequiredError="Username is required." />
            <MudTextField @bind-Value="Password" Label="Password" InputType="InputType.Password" Required="true" RequiredError="Password is required." />
            <MudTextField @bind-Value="Currency" Label="Preferred Currency" Required="true" RequiredError="Currency is required." />
            <MudButton Type="Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-3">Register</MudButton>
        </MudForm>
        @* @if (!string.IsNullOrEmpty(ErrorMessage)) *@
        @* { *@
        @*     <MudText Typo="Typo.subtitle2" Color="Color.Error">@ErrorMessage</MudText> *@
        @* } *@
    </MudCardContent>
</MudCard>

@* @code { *@
@*     private string Username; *@
@*     private string Password; *@
@*     private string Currency; *@
@*     private string ErrorMessage; *@
@*     private MudForm form; *@

@*     private async Task RegisterUser() *@
@*     { *@
@*         ErrorMessage = string.Empty; *@

@*         try *@
@*         { *@
@*             var success = await AuthService.Register(new User *@
@*             { *@
@*                 Username = Username, *@
@*                 Password = Password, *@
@*                 Currency = Currency *@
@*             }); *@

@*             if (success) *@
@*             { *@
@*                 Navigation.NavigateTo("/login"); *@
@*             } *@
@*             else *@
@*             { *@
@*                 ErrorMessage = "Registration failed. Username might already exist."; *@
@*             } *@
@*         } *@
@*         catch (Exception ex) *@
@*         { *@
@*             ErrorMessage = $"An error occurred: {ex.Message}"; *@
@*         } *@
@*     } *@
@* } *@
